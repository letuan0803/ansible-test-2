- name: Prepare
  hosts: k8s
  become: true
  tasks:
  # Disabling Swap 
  - name: Disable Swap
    mount:
      name: none
      fstype: swap
      state: absent

  - name: Unmount Swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add Kubernetes node entries to /etc/hosts
    lineinfile:
      path: /etc/hosts
      line: "{{ item }}"
      state: present
    loop:
      - "10.0.129.207 sre-vm-k8s-1"
      - "10.0.129.206 sre-vm-k8s-2"
      - "10.0.129.249 sre-vm-k8s-3"

  - name: Enable Require Modules
    modprobe:
      state: present
      name: "{{ item }}"
    loop: [overlay,br_netfilter]

  - name: Configure sysctl for Kubernetes
    sysctl:
      name: "{{ item.name }}"
      value: "{{ item.value }}"
      state: present
      sysctl_set: yes
      reload: yes
    loop:
      - { name: 'net.bridge.bridge-nf-call-ip6tables', value: '1' }
      - { name: 'net.bridge.bridge-nf-call-iptables', value: '1' }
      - { name: 'net.ipv4.ip_forward', value: '1' }

- name: Install Docker and configure containerd
  hosts: k8s
  become: true
  tasks:
    # Update apt cache
    - name: Update apt cache
      apt:
        update_cache: yes

    # Install required packages
    - name: Install required packages
      apt:
        name:
          - ca-certificates
          - curl
        state: present

    # Create directory for Docker GPG key
    - name: Create directory for Docker GPG key
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    # Download Docker's GPG key
    - name: Download Docker's GPG key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    # Add Docker repository
    - name: Add Docker repository
      copy:
        content: |
          deb [arch={{ ansible_architecture }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        dest: /etc/apt/sources.list.d/docker.list
        mode: '0644'

    # Update apt cache after adding Docker repository
    - name: Update apt cache after adding Docker repository
      apt:
        update_cache: yes

    # Install Docker packages
    - name: Install Docker packages
      apt:
        name: containerd.io
        state: present

    # Generate default containerd configuration
    - name: Generate default containerd configuration
      command: containerd config default
      register: containerd_config
      changed_when: false

    # Write containerd configuration to file
    - name: Write containerd configuration to file
      copy:
        content: "{{ containerd_config.stdout }}"
        dest: /etc/containerd/config.toml

    # Update containerd configuration to use systemd cgroup
    - name: Update containerd configuration to use systemd cgroup
      lineinfile:
        path: /etc/containerd/config.toml
        regexp: '^SystemdCgroup = false'
        line: 'SystemdCgroup = true'

    # Restart and enable containerd
    - name: Restart and enable containerd
      systemd:
        name: containerd
        state: restarted
        enabled: yes

- name: Install kubeadm, kubelet, and kubectl
  hosts: k8s
  become: true
  tasks:
    # Update apt package index
    - name: Update apt package index
      apt:
        update_cache: yes

    # Install required packages
    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gpg
        state: present

    # Create directory for Kubernetes GPG key
    - name: Create directory for Kubernetes GPG key
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    # Download Kubernetes GPG key
    - name: Download Kubernetes GPG key
      get_url:
        url: https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key
        dest: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        mode: '0644'

    # Add Kubernetes apt repository
    - name: Add Kubernetes apt repository
      copy:
        content: |
          deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /
        dest: /etc/apt/sources.list.d/kubernetes.list
        mode: '0644'

    # Update apt package index after adding Kubernetes repository
    - name: Update apt package index after adding Kubernetes repository
      apt:
        update_cache: yes

    # Install kubeadm, kubelet, and kubectl
    - name: Install kubeadm, kubelet, and kubectl
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    # Mark kubeadm, kubelet, and kubectl to hold their versions
    - name: Hold kubeadm, kubelet, and kubectl versions
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        force: yes
        mark: hold

    # Enable and start kubelet service
    - name: Enable and start kubelet service
      systemd:
        name: kubelet
        state: started
        enabled: yes
